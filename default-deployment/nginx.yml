apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-webserver
  namespace: testing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-webserver
  template:
    metadata:
      labels:
        app: nginx-webserver
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        #vault.hashicorp.com/agent-inject-secret-config.txt: 'internal/test/config'   
        vault.hashicorp.com/agent-inject-secret-config: 'internal/test/config'
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "internal/test/config" -}}
            export testlmao="{{ .Data.data.lmao }}"
          {{- end }}
    spec:
      serviceAccountName: internal-app
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: testing
spec:
  selector:
    app: nginx-webserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-webserver-ingress
  namespace: testing
  annotations:
    spec.ingressClassName: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    #traefik.ingress.kubernetes.io/router.middlewares: traefik-auth-middleware@kubernetescrd
spec:
  rules:
    - host: test.exner.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
                  
  tls:
    - hosts:
        - test.exner.dev
      secretName: test-exner-dev-tls


# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: nginx-ingressroute
#   namespace: linus
# spec:
#   entryPoints:
#     - web
#   routes:
#   - match: Host(`your.example.com`)
#     kind: Rule
#     services:
#     - name: nginx-service
#       port: 80